{
    "contents" : "###################################\n# Code for: R for Marketing Research and Analytics, Chapter 3\n#\n# Authors:  Chris Chapman               Elea McDonnell Feit\n#           cnchapman+rbook@gmail.com   efeit@drexel.edu\n#\n# Copyright 2015, Springer \n#\n# Last update: January 7, 2015\n# Version: 1.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n#\n# You may obtain a copy of the License at\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#################################################################\n# BRIEF HOW TO USE\n# This file contains scripts used in Chapter 3 of Chapman & Feit (2015),\n#   \"R for Marketing Research and Analytics\", Springer. \n#################################################################\n\n\n\n# chapter 3\n\n############\n# alternative command to download the data. \n# ==> But don't do this! See the book and SIMULATE the data step by step below\n# Long URL:\n# store.df <- read.csv(paste(\"http://r-marketing.r-forge.r-project.org/\",\n#                           \"data/rintro-chapter3.csv\", sep=\"\"))\n# Short URL:\nstore.df <- read.csv(\"http://goo.gl/QPDdMl\")  # only if you skip the simulation\nsummary(store.df)\n############\n\n\n############\n# create the data\n\nk.stores <- 20    # 20 stores\nk.weeks <- 104    # 2 years of data each\n\n# create a data frame of initially missing values to hold the data\nstore.df <- data.frame(matrix(NA, ncol=10, nrow=k.stores*k.weeks))\nnames(store.df) <- c(\"storeNum\", \"Year\", \"Week\", \"p1sales\", \"p2sales\", \n                     \"p1price\", \"p2price\", \"p1prom\", \"p2prom\", \"country\")\n\ndim(store.df)\n\nstore.num <- 101:(100+k.stores)\n(store.cty <- c(rep(\"US\", 3), rep(\"DE\", 5), rep(\"GB\", 3), rep(\"BR\", 2),\n                rep(\"JP\", 4), rep(\"AU\", 1), rep(\"CN\", 2)))\nlength(store.cty)    # make sure the country list is the right length\n\n\nstore.df$storeNum <- rep(store.num, each=k.weeks)\nstore.df$country  <- rep(store.cty, each=k.weeks)\nrm(store.num, store.cty)    # clean up\n\n(store.df$Week <- rep(1:52, times=k.stores*2))\n\n# try the inner parts of the next line to figure out how we use rep()\n(store.df$Year  <- rep(rep(1:2, each=k.weeks/2), times=k.stores))\nstr(store.df)\n\nstore.df$storeNum <- factor(store.df$storeNum)\nstore.df$country  <- factor(store.df$country)\nstr(store.df)\n\nhead(store.df)   # defaults to 6 rows\nhead(store.df, 120)  # 120 rows is enough to check 2 stores\ntail(store.df, 120)  # make sure end looks OK too\n\n\n# set random seed to make the random sequences replicable\nset.seed(98250)  # a favorite US postal code\n\n# promotion status, using binomial distribution, rbinom()\nstore.df$p1prom <- rbinom(n=nrow(store.df), size=1, p=0.1)  # 10% promoted\nstore.df$p2prom <- rbinom(n=nrow(store.df), size=1, p=0.15) # 15%\nhead(store.df)\n\n# prices\nstore.df$p1price <- sample(x=c(2.19, 2.29, 2.49, 2.79, 2.99), \n                           size=nrow(store.df), replace=TRUE)\nstore.df$p2price <- sample(x=c(2.29, 2.49, 2.59, 2.99, 3.19), \n                           size=nrow(store.df), replace=TRUE)\nhead(store.df)\n\n# sales data, using poisson (counts) distribution, rpois()\n# first, the default sales in the absence of promotion\ntmp.sales1 <- rpois(nrow(store.df), lambda=120)  # lambda = mean sales per week\ntmp.sales2 <- rpois(nrow(store.df), lambda=100)  # lambda = mean sales per week\n\n# scale sales according to the ratio of log(price)\ntmp.sales1 <- tmp.sales1 * log(store.df$p2price) / log(store.df$p1price)\ntmp.sales2 <- tmp.sales2 * log(store.df$p1price) / log(store.df$p2price)\n\n# final sales get a 30% or 40% lift when promoted\nstore.df$p1sales <- floor(tmp.sales1 * (1 + store.df$p1prom*0.3))\nstore.df$p2sales <- floor(tmp.sales2 * (1 + store.df$p2prom*0.4))\nhead(store.df)\n\n# install.packages(\"car\")  #only run once\nlibrary(car)\nsome(store.df, 10)\n\n# command to write it out to a CSV:\n# write.csv(store.df, file=\"rintro-chapter3.csv\",row.names=FALSE)\n#\n\n############\n# descriptives\n\ntable(store.df$p1price)\n\np1.table <- table(store.df$p1price)\np1.table\nstr(p1.table)\n\n\nplot(p1.table)\n\ntable(store.df$p1price, store.df$p1prom)\np1.table2 <- table(store.df$p1price, store.df$p1prom)\np1.table2[, 2] / (p1.table2[, 1] + p1.table2[, 2])\n\n\n\n# functions\nmin(store.df$p1sales)\nmax(store.df$p2sales)\n\nmean(store.df$p1prom)\nmedian(store.df$p2sales)\n\nvar(store.df$p1sales)\nsd(store.df$p1sales)\nIQR(store.df$p1sales)\nmad(store.df$p1sales)\n\nquantile(store.df$p1sales, probs=c(0.25,0.50,0.75))   # interquartile range\n\nquantile(store.df$p1sales, probs=c(0.05, 0.95))  # central 90%\nquantile(store.df$p1sales, probs=0:10/10)\n\n## Build a summary\nmysummary.df <- data.frame(matrix(NA, nrow=2, ncol=2))\nnames(mysummary.df) <- c(\"Median Sales\", \"IQR\")\nrownames(mysummary.df) <- c(\"Product 1\", \"Product 2\")\nmysummary.df[\"Product 1\", \"Median Sales\"] <- median(store.df$p1sales)\nmysummary.df[\"Product 2\", \"Median Sales\"] <- median(store.df$p2sales)\nmysummary.df[\"Product 1\", \"IQR\"] <- IQR(store.df$p1sales)\nmysummary.df[\"Product 2\", \"IQR\"] <- IQR(store.df$p2sales)\nmysummary.df\n\n## Descriptive summaries\nsummary(store.df)\nsummary(store.df$Year)\nsummary(store.df, digits=2)\n\n# install.packages(\"psych\")  #only run once\nlibrary(psych)\ndescribe(store.df)\ndescribe(store.df[ , c(2, 4:9)])\n\n\n############\n# apply()\napply(store.df[, 2:9], MARGIN=2, FUN=mean)\napply(store.df[, 2:9], 1, mean)\napply(store.df[, 2:9], 2, sum)\napply(store.df[, 2:9], 2, sd)\napply(store.df[, 2:9], 2, function(x) { mean(x) - median(x) } )\n\n## creating a summary data frame using apply()\nmysummary2.df <- data.frame(matrix(NA, nrow=2, ncol=2))\nnames(mysummary2.df) <- c(\"Median Sales\", \"IQR\")\nrownames(mysummary2.df) <- names(store.df)[4:5] # names from the data frame\nmysummary2.df[, \"Median Sales\"] <- apply(store.df[, 4:5], 2, median)\nmysummary2.df[, \"IQR\"]          <- apply(store.df[, 4:5], 2, IQR)\nmysummary2.df\n\n\n\n############\n# single variable visualization\n\nhist(store.df$p1sales)\n\n\n\n## prettier version\n\nhist(store.df$p1sales, \n     main=\"Product 1 Weekly Sales Frequencies, All Stores\",    # add labels\n     xlab=\"Product 1 Sales (Units)\",\n     ylab=\"Count\" )           \n\n\nhist(store.df$p1sales, \n     main=\"Product 1 Weekly Sales Frequencies, All Stores\",\n     xlab=\"Product 1 Sales (Units)\",\n     ylab=\"Count\",\n     breaks=30,             # more columns \n     col=\"lightblue\")       # color the bars\n\n\n# relabeling the x axis\n\nhist(store.df$p1sales, \n     main=\"Product 1 Weekly Sales Frequencies, All Stores\",\n     xlab=\"Product 1 Sales (Units)\",\n     ylab=\"Relative frequency\",             # it's no londer the count!\n     breaks=30, \n     col=\"lightblue\", \n     freq=FALSE,                            # freq=FALSE means to plot density, not counts\n     xaxt=\"n\")                              # xaxt=\"n\" means \"x axis tick marks == no\"\n\naxis(side=1, at=seq(60, 300, by=20))        # add the x axis (side=1) tick marks we want\n\n\n# adding curves to the histogram\n\nhist(store.df$p1sales, \n     main=\"Product 1 Weekly Sales Frequencies, All Stores\",\n     xlab=\"Product 1 Sales (Units)\",\n     ylab=\"Relative frequency\",\n     breaks=30, \n     col=\"lightblue\", \n     freq=FALSE,                            # freq=FALSE means to plot density, not counts\n     xaxt=\"n\")                              # xaxt=\"n\" means \"x axis tick marks == no\"\n\naxis(side=1, at=seq(60, 300, by=20))        # add the x axis (side=1) tick marks we want\n\n\nlines(density(store.df$p1sales, bw=10),    # \"bw= ...\" adjusts the smoothing\n      type=\"l\", col=\"darkred\", lwd=2)      # lwd = line width\n\n\n############\n# boxplots and stripcharts\n\n## boxplot\n\nboxplot(store.df$p2sales, xlab=\"Weekly sales\", ylab=\"P2\",\n        main=\"Weekly sales of P2, All stores\", horizontal=TRUE)\n\n\nboxplot(store.df$p2sales ~ store.df$storeNum, horizontal=TRUE,\n     ylab=\"Store\", xlab=\"Weekly unit sales\", las=1,\n     main=\"Weekly Sales of P2 by Store\")\n\n# using data=...\n\nboxplot(p2sales ~ p2prom, data=store.df, horizontal=TRUE, yaxt=\"n\", \n     ylab=\"P2 promoted in store?\", xlab=\"Weekly sales\",\n     main=\"Weekly sales of P2 with and without promotion\")\naxis(side=2, at=c(1,2), labels=c(\"No\", \"Yes\"))\n\n\n\n### qq check for normality\nqqnorm(store.df$p1sales)\nqqline(store.df$p1sales)\n\n### is more normal with log()\nqqnorm(log(store.df$p1sales))\nqqline(log(store.df$p1sales))\n\n\n### ecdf cumulative distribution plot\n\nplot(ecdf(store.df$p1sales),\n     main=\"Cumulative distribution of P1 Weekly Sales\",\n     ylab=\"Cumulative Proportion\",\n     xlab=c(\"P1 weekly sales, all stores\", \"90% of weeks sold <= 171 units\"),\n     yaxt=\"n\")\naxis(side=2, at=seq(0, 1, by=0.1), las=1, \n     labels=paste(seq(0,100,by=10), \"%\", sep=\"\"))\n# add lines for 90%\nabline(h=0.9, lty=3)\nabline(v=quantile(store.df$p1sales, pr=0.9), lty=3)\n\n\n\n### by() and aggregate()\nby(store.df$p1sales, store.df$storeNum, mean)\nby(store.df$p1sales, list(store.df$storeNum, store.df$Year), mean)\n\naggregate(store.df$p1sales, by=list(country=store.df$country), sum)\n\n\n############\n# world map \n\n# aggregate the average per-store sales by country\np1sales.sum <- aggregate(store.df$p1sales, \n                         by=list(country=store.df$country), sum)\n\n# install.packages(c(\"rworldmap\", \"RColorBrewer\"))\nlibrary(rworldmap)\nlibrary(RColorBrewer)\n\n# create map\np1sales.map <- joinCountryData2Map(p1sales.sum, joinCode = \"ISO2\", \n                                   nameJoinColumn = \"country\")\n\nmapCountryData(p1sales.map, nameColumnToPlot=\"x\", \n               mapTitle=\"Total P1 sales by Country\",\n               colourPalette=brewer.pal(7, \"Greens\"), \n               catMethod=\"fixedWidth\", addLegend=FALSE)\n\n\n",
    "created" : 1452794529237.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2308784786",
    "id" : "CDE37352",
    "lastKnownWriteTime" : 1423681434,
    "path" : "~/Documents/Chris Documents/papers/repos/RIntroBook/Instructor/Chapter3/chapter3-ChapmanFeit.R",
    "project_path" : "Chapter3/chapter3-ChapmanFeit.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}