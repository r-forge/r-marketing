{
    "contents" : "\nR for Marketing Research and Analytics\n========================================================\nAuthor: Chris Chapman and Elea McDonnell Feit\nDate: January 2016\ncss: ../chapman-feit-slides.css\nwidth: 1024\nheight: 768\n\n**Chapter 3: Describing Data (Descriptive Statistics)**  \n\nWebsite for all data files:  \n[http://r-marketing.r-forge.r-project.org/data.html](http://r-marketing.r-forge.r-project.org/data.html)\n\n\n\nLoad the data\n========\nThe book walks through **simulation** of nearly all the data sets ... \ncheck that out, as there is much more about R in those sections.\n\nFor today, we'll just load the data from the website:\n```{r}\nstore.df <- read.csv(\"http://goo.gl/QPDdMl\")\nsummary(store.df)\n```\n\n\nDescriptives 1\n========\ntable() for categorical variable\n```{r}\ntable(store.df$p1price)\n```\nThe counts can be converted to proportions with prop.table()\n```{r}\nprop.table(table(store.df$p1price))\n```\n\nTable as an object\n========\nTables are objects that can be assigned and indexed:\n```{r}\np1.table <- table(store.df$p1price)\np1.table\np1.table[3]\nstr(p1.table)\n```\n\nPlotting a table (basic)\n========\n```{r}\nplot(p1.table)\n```\n\nWe'll see better plots later!\n\nTwo-way tables\n========\n```{r}\ntable(store.df$p1price, store.df$p1prom)\n```\nNote that tables index [row, column] like most things in R!\n\nTwo-way tables are also assignable \\& indexable:\n```{r}\np1.table2 <- table(store.df$p1price, store.df$p1prom)\np1.table2[, 2] / (p1.table2[, 1] + p1.table2[, 2])\n```\n\n\nCore Descriptive Functions\n========\n```{r}\nmin(store.df$p1sales)\nmax(store.df$p2sales)\nmean(store.df$p1prom)\nmedian(store.df$p2sales)\n\n```\n\n***\n```{r}\nvar(store.df$p1sales)\nsd(store.df$p1sales)\nIQR(store.df$p1sales)\nmad(store.df$p1sales)\n```\n\nPercentile (Quantile) function\n========\n```{r}\nquantile(store.df$p1sales)   # default = 0:4*0.25\nquantile(store.df$p1sales, probs=c(0.25, 0.75)) # Interquartile\nquantile(store.df$p1sales, probs=c(0.025, 0.975)) # central 95%\nquantile(store.df$p1sales, probs=1:10/10)  # arbitrary\n```\n\n\nSummary of data frame\n========\n```{r}\nsummary(store.df)\n```\n\nSummary of data frame elements\n========\n```{r}\nsummary(store.df$p1sales)\nsummary(store.df$p1sales, digits=2)  # round output\n```\n\n\nDescribe (psych package)\n========\n```{r, size=\"tiny\"}\nlibrary(psych)   # must install first\ndescribe(store.df)\n```\n\n\n\nVisualization again: Steps to Prettify (1)\n========\nhist() for basic plot\n```{r}\nhist(store.df$p1sales)\n```\n\n\nImprove it with labels\n========\n```{r}\nhist(store.df$p1sales, \n     main=\"Product 1 Weekly Sales Frequencies, All Stores\",\n     xlab=\"Product 1 Sales (Units)\",\n     ylab=\"Count\" )           \n```\n\n\nMake it more granular and colorful\n========\n```{r}\nhist(store.df$p1sales, \n     main=\"Product 1 Weekly Sales Frequencies, All Stores\",\n     xlab=\"Product 1 Sales (Units)\",\n     ylab=\"Count\",\n     breaks=30,             # more columns \n     col=\"lightblue\")       # color the bars\n```\n\n\nChange counts to proportions\n========\n```{r}\nhist(store.df$p1sales, \n     main=\"Product 1 Weekly Sales Frequencies, All Stores\",\n     xlab=\"Product 1 Sales (Units)\",\n     ylab=\"Relative frequency\", # changed\n     breaks=30, \n     col=\"lightblue\", \n     freq=FALSE )                # freq=FALSE for density\n```\n\n\nAdd density curve\n========\n```{r}\nhist(store.df$p1sales, \n     main=\"Product 1 Weekly Sales Frequencies, All Stores\",\n     xlab=\"Product 1 Sales\", ylab=\"Relative frequency\",\n     breaks=30, col=\"lightblue\", freq=FALSE)\n\nlines(density(store.df$p1sales, bw=10),  # bw = smoothing\n      type=\"l\", col=\"darkred\", lwd=2)    # lwd = line width\n```\n\n\n\n############\n# boxplots and stripcharts\n\n## boxplot\nBoxplot \n========\nBasic boxplot is good for data exploration:\n```{r}\nboxplot(store.df$p2sales, xlab=\"Weekly sales\", ylab=\"P2\",\n        main=\"Weekly sales of P2, All stores\", horizontal=TRUE)\n\n```\n\nBoxplot broken out by factor\n========\nPlot **DV ~ IV** to condition on a factor:\n```{r}\nboxplot(store.df$p2sales ~ store.df$storeNum, horizontal=TRUE,\n     ylab=\"Store\", xlab=\"Weekly unit sales\", las=1,\n     main=\"Weekly Sales of P2 by Store\")\n\n```\n\n\nBoxplot with data and axes\n========\nUse **data=** to specify df, and **axis** to label axes better:\n```{r}\nboxplot(p2sales ~ p2prom, data=store.df, horizontal=TRUE, \n        yaxt=\"n\", ylab=\"P2 promoted in store?\", \n        xlab=\"Weekly sales\", main=\"Sales of P2 vs promotion\")\naxis(side=2, at=c(1,2), labels=c(\"No\", \"Yes\"), las=1)\n```\n\n\nSee the book for more\n========\ntype: alert\n\n1. QQ plots to check distribution\n2. QQ plots for raw vs. transformed data\n3. Cumulative distribution plots, such as:\n\n```{r, echo=FALSE}\nplot(ecdf(store.df$p1sales),\n     main=\"Cumulative distribution of P1 Weekly Sales\",\n     ylab=\"Cumulative Proportion\",\n     xlab=c(\"P1 weekly sales, all stores\", \"90% of weeks sold <= 171 units\"),\n     yaxt=\"n\")\naxis(side=2, at=seq(0, 1, by=0.1), las=1, \n     labels=paste(seq(0,100,by=10), \"%\", sep=\"\"))\n# add lines for 90%\nabline(h=0.9, lty=3)\nabline(v=quantile(store.df$p1sales, pr=0.9), lty=3)\n```\n\n\nby() (1)\n========\nUse **by()** to split data by a factor and apply a function to each group:\n```{r}\nby(store.df$p1sales, store.df$storeNum, mean)\n```\n\nby(store.df$p1sales, list(store.df$storeNum, store.df$Year), mean)\n\n\nby() (2)\n========\n**by()** can  do multi-way splits using a **list()** of factors:\n```{r}\nby(store.df$p1sales, list(store.df$storeNum, store.df$Year), mean)\n```\n\n\naggregate()\n========\n**aggregate()** collects the results of **by()** into an indexable object:\n```{r}\nstoreMean <- aggregate(store.df$p1sales, \n                       by=list(store=store.df$storeNum), mean)\nstoreMean\n```\n\n\nAggregate sales by country\n========\n```{r}\np1sales.sum <- aggregate(store.df$p1sales, \n                         by=list(country=store.df$country), sum)\np1sales.sum\n```\n\n\nPlot sales by country with rworldmap()\n========\nFirst we load the packages, and set up a map.\n\nIn our aggregated data, we use the **country** column to tell the map where to put the  **p1sales.sum** aggregated mean.\n```{r}\nlibrary(rworldmap)    # must be installed\nlibrary(RColorBrewer) # must be installed\n\np1sales.map <- joinCountryData2Map(p1sales.sum, \n                                   joinCode = \"ISO2\", \n                                   nameJoinColumn = \"country\")\n```\n\n\nDraw the map\n========\nOnce the data is \"mapped\" to the locations, we can draw the visualization:\n```{r}\nmapCountryData(p1sales.map, nameColumnToPlot=\"x\", \n               mapTitle=\"Total P1 sales by Country\",\n               colourPalette=brewer.pal(7, \"Greens\"), \n               catMethod=\"fixedWidth\", addLegend=FALSE)\n```\n\n\nThat's all for Chapter 3!\n=========\ntype: section\n\n# Break time\n\n\nNotes\n========\n<small>\nThis presentation is based on Chapter 3 of Chapman and Feit, *R for Marketing Research and Analytics* &copy; 2015 Springer.    \n   \nAll code in the presentation is licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\\ Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.  \n</small>\n\n\n",
    "created" : 1449115703072.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2236571711",
    "id" : "7E79A1F1",
    "lastKnownWriteTime" : 1449601542,
    "path" : "~/Documents/Chris Documents/papers/repos/RIntroBook/Instructor/Chapter3/Chapter3-ChapmanFeit.Rpres",
    "project_path" : "Chapter3/Chapter3-ChapmanFeit.Rpres",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_presentation"
}